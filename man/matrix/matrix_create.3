.TH matrix_create 3
.SH NAME
matrix_create \- Create a matrix object in memory
.SH LIBRARY
matrix (\fIlibmatrix\fR, \fI\-lmatrix\fR)
.SH SYNOPSIS
.B #include \[dq]matrix/matrix.h\[dq]
.br
\fBMatrix * matrix_create (size_t \fInr\fR\fB, size_t \fInc\fR\fB);\fR
.SH DESCRIPTION
.B matrix_create
creates a matrix object with \fInr\fR rows and \fInc\fR columns in memory. The matrix
values are initialized 0 using \fIcalloc\fR. The user is responsible for freeing the
memory allocated by \fBmatrix_create\fR using \fBmatrix_destroy\fR. The returned
pointer points to a \fIstruct matrix\fR (typedef'ed \fIMatrix\fR), with the following
layout:

.RS
struct matrix {
.RS
const size_t nr;
.br
const size_t nc;
.br
const size_t n;
.br
float * vals;
.RE
}
.RE

where:

.RS
.TS
l l.
\fInr\fR	the number of rows
\fInc\fR	the number of columns
\fIn\fR	the total number of elements, i.e. the number of rows times the number of columns
\fIvals\fR	a pointer to \fIcalloc\fR'ed memory holding the matrix values
.TE
.RE
.SH RETURN VALUE
A pointer to the created matrix object.

.SH SEE ALSO
\fBmatrix_destroy\fR(3), \fBmatrix\fR(3)
